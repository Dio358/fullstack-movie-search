name: CI

on: [pull_request]

jobs:
  docker-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: pgres
          POSTGRES_PASSWORD: pgres
          POSTGRES_DB: pgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U pgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.yml up -d --build

      - name: Wait for containers to be healthy
        run: |
          echo "Waiting for DB and app to be healthy..."
          docker compose ps

      - name: Run Black formatting check
        run: docker compose exec app poetry run black --check --diff ds_webapp/

      - name: Run Pylint
        run: docker compose exec app poetry run pylint ds_webapp/

      - name: Run tests
        env:
          API_URL: "https://api.example.com"
          API_KEY: "your_secret_api_key"
        run: docker compose exec -e API_URL -e API_KEY app poetry run pytest

      - name: Tear down
        if: always()
        run: docker compose down
