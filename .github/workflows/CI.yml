name: CI

on: [pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

  formatting:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Run Black
        run: poetry run black --check --diff .

  linting:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Check linting - run Pylint
        run: poetry run pylint your_package_name

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Run Tests
        run: poetry run pytest
